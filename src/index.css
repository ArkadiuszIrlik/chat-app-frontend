/* latin-ext */
@font-face {
  font-family: 'Nunito Sans';
  font-style: normal;
  font-weight: 400;
  font-stretch: 100%;
  font-display: swap;
  src: url(./../fonts/nunito-sans-regular-latin-ext.woff2) format('woff2');
  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF,
    U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Nunito Sans';
  font-style: normal;
  font-weight: 400;
  font-stretch: 100%;
  font-display: swap;
  src: url(./../fonts/nunito-sans-regular-latin.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,
    U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191,
    U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* only "Beluga" glyphs */
@font-face {
  font-family: 'Reef';
  font-style: normal;
  font-weight: 400;
  src: url(./../fonts/reef-beluga.woff2) format('woff2');
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    color-scheme: dark;
  }

  html {
    @apply bg-gray-800;
  }
}

@layer components {
  .beluga-mask {
    mask-image: url(./assets/beluga-black-logo.png);
    mask-mode: alpha;
    mask-size: contain;
    mask-position: center;
  }

  .exclamation-mask {
    mask-image: url(./assets/exclamation-point-128.png);
    mask-mode: alpha;
    mask-size: contain;
    mask-position: center;
  }
}

@layer utilities {
  .scrollbar-none {
    -ms-overflow-style: none; /* IE */
    scrollbar-width: none; /* Firefox */
  }
  .scrollbar-none::-webkit-scrollbar {
    display: none; /* Chromium and Safari */
  }
  .mask-content {
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }

  @supports not (
    (
        (mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0))
          and (mask-composite: exclude)
      )
      or
      (
        (
            -webkit-mask: linear-gradient(#fff 0 0) content-box,
            linear-gradient(#fff 0 0)
          )
          and (-webkit-mask-composite: xor)
      )
  ) {
    .mask-content::before {
      content: '';
      position: absolute;
      box-sizing: content-box;
      border-radius: inherit;
      inset: 3px;
      padding: inherit;
      @apply bg-gray-700;
    }
  }
  .visual-search-none {
    pointer-events: none;
  }
}
